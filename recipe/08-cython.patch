Make the Python module build on MinGW and MSYS2 by not attempting to
define PYTHON_PATH_SEPARATOR, PYTHON_PREFIX,
PYTHON_RELATIVE_SITE_PACKAGES_DIR, PYTHON_SEPARATOR, and
PYTHON_SITE_PACKAGES.  These variables may contain backslashes and
semicolons, which are escape characters and delimiters in CMake lists,
respectively.
--- tvips/CMakeLists.txt.orig
+++ tvips/CMakeLists.txt
@@ -512,6 +512,10 @@ if(BUILD_PYTHON_MODULE)
   # Once CMake 3.14 is in place, should replace the last include
   # directory with just ${Python3_NumPy_INCLUDE_DIRS}
   python_extension_module(pysmv)
+  if(${MINGW})
+    target_compile_definitions(pysmv
+    PUBLIC MS_WIN64)
+  endif()
   target_compile_definitions(pysmv
     PUBLIC NPY_NO_DEPRECATED_API=NPY_1_7_API_VERSION)
   target_include_directories(pysmv PRIVATE
--- tvips/cmake/Modules/FindPythonExtensions.cmake.orig
+++ tvips/cmake/Modules/FindPythonExtensions.cmake
@@ -8,19 +8,6 @@
 # The following variables are defined:
 # ::
 #
-#   PYTHON_PREFIX                     - absolute path to the current Python
-#                                       distribution's prefix
-#   PYTHON_SITE_PACKAGES_DIR          - absolute path to the current Python
-#                                       distribution's site-packages directory
-#   PYTHON_RELATIVE_SITE_PACKAGES_DIR - path to the current Python
-#                                       distribution's site-packages directory
-#                                       relative to its prefix
-#   PYTHON_SEPARATOR                  - separator string for file path
-#                                       components.  Equivalent to ``os.sep`` in
-#                                       Python.
-#   PYTHON_PATH_SEPARATOR             - separator string for PATH-style
-#                                       environment variables.  Equivalent to
-#                                       ``os.pathsep`` in Python.
 #   PYTHON_EXTENSION_MODULE_SUFFIX    - suffix of the compiled module. For example, on
 #                                       Linux, based on environment, it could be ``.cpython-35m-x86_64-linux-gnu.so``.
 #
@@ -248,81 +235,21 @@
 
 include(targetLinkLibrariesWithDynamicLookup)
 
-set(_command "
+if(NOT DEFINED PYTHON_EXTENSION_MODULE_SUFFIX)
+  set(_command "
 import distutils.sysconfig
-import itertools
-import os
-import os.path
-import site
 import sys
 
-result = None
-rel_result = None
-candidate_lists = []
-
-try:
-    candidate_lists.append((distutils.sysconfig.get_python_lib(),))
-except AttributeError: pass
-
-try:
-    candidate_lists.append(site.getsitepackages())
-except AttributeError: pass
-
-try:
-    candidate_lists.append((site.getusersitepackages(),))
-except AttributeError: pass
-
-candidates = itertools.chain.from_iterable(candidate_lists)
-
-for candidate in candidates:
-    rel_candidate = os.path.relpath(
-      candidate, sys.prefix)
-    if not rel_candidate.startswith(\"..\"):
-        result = candidate
-        rel_result = rel_candidate
-        break
-
 ext_suffix_var = 'SO'
 if sys.version_info[:2] >= (3, 5):
     ext_suffix_var = 'EXT_SUFFIX'
 
-sys.stdout.write(\";\".join((
-    os.sep,
-    os.pathsep,
-    sys.prefix,
-    result,
-    rel_result,
-    distutils.sysconfig.get_config_var(ext_suffix_var)
-)))
+sys.stdout.write(distutils.sysconfig.get_config_var(ext_suffix_var))
 ")
 
-execute_process(COMMAND "${Python_EXECUTABLE}" -c "${_command}"
-                OUTPUT_VARIABLE _list
-                RESULT_VARIABLE _result)
-
-list(GET _list 0 _item)
-set(PYTHON_SEPARATOR "${_item}")
-mark_as_advanced(PYTHON_SEPARATOR)
-
-list(GET _list 1 _item)
-set(PYTHON_PATH_SEPARATOR "${_item}")
-mark_as_advanced(PYTHON_PATH_SEPARATOR)
-
-list(GET _list 2 _item)
-set(PYTHON_PREFIX "${_item}")
-mark_as_advanced(PYTHON_PREFIX)
-
-list(GET _list 3 _item)
-set(PYTHON_SITE_PACKAGES_DIR "${_item}")
-mark_as_advanced(PYTHON_SITE_PACKAGES_DIR)
-
-list(GET _list 4 _item)
-set(PYTHON_RELATIVE_SITE_PACKAGES_DIR "${_item}")
-mark_as_advanced(PYTHON_RELATIVE_SITE_PACKAGES_DIR)
-
-if(NOT DEFINED PYTHON_EXTENSION_MODULE_SUFFIX)
-  list(GET _list 5 _item)
-  set(PYTHON_EXTENSION_MODULE_SUFFIX "${_item}")
+  execute_process(COMMAND "${Python_EXECUTABLE}" -c "${_command}"
+                  OUTPUT_VARIABLE PYTHON_EXTENSION_MODULE_SUFFIX
+                  RESULT_VARIABLE _result)
 endif()
 
 function(_set_python_extension_symbol_visibility _target)
